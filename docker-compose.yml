version: '3'

services:
  redis:
    image: redis:7.0-alpine
    container_name: risknet_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - risknet_network

  neo4j:
    image: neo4j:5.14.0
    container_name: opensancton_neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/opensancton123
      - NEO4J_server_memory_pagecache_size=1G
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_config_strict__validation_enabled=false
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    networks:
      - risknet_network

  risknet:
    build: .
    container_name: risknet_api
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://opensancton_neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=opensancton123
    volumes:
      - .:/app  # Mount the current directory to /app in the container
      - ./.env:/app/.env  # Explicitly mount .env file
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - risknet_network

volumes:
  redis_data:
  neo4j_data:
  neo4j_logs:

networks:
  risknet_network:
    driver: bridge 